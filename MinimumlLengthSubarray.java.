/*
		 * Given an array A, find the size of the smallest subarray such that it
		 * contains at least one occurrence of the maximum value of the array
		 * 
		 * and at least one occurrence of the minimum value of the array.
		 */
     public class Solution {
    public int solve(int[] A) {
        int max=Integer.MIN_VALUE;
        int min =Integer.MAX_VALUE;
        int min_index=-1;
        int max_index=-1;
        int current_length=0;
        int ans=A.length+1;
        for(int i=0;i<A.length;i++)
        {
if(min>A[i])
{
    min=A[i];
}
if(max<A[i])
{
    max=A[i];
}
        }
        if(max==min)
        {
            return 1;
        }

        for(int k=A.length-1;k>=0;k--)
        {
            if(A[k]==max)
            {
            max_index=k;
            if(min_index!=-1)
            {
           if(min_index>max_index)
                    {
                    current_length=min_index-max_index+1;
                    }
                    else{
                         current_length=max_index-min_index+1;
                    }
ans=Math.min(ans,current_length);
            }
            }
            else if(A[k]==min){
                min_index=k;
                if(max_index!=-1)
                {
                    if(min_index>max_index)
                    {
                    current_length=min_index-max_index+1;
                    }
                    else{
                         current_length=max_index-min_index+1;
                    }
ans=Math.min(ans,current_length);
                }

            }
        }
        return ans;
    }
}


